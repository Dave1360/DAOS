@using MusicDating.Models.ViewModels
@model EditUserInstrumentVm


@{
    ViewData["Title"] = "Rediger instrument";
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="EditUserInstrument">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <h2>Hvor Ã¸vet er du?</h2>
            <div class="form-group">
                <label class="control-label"></label><span id="rangeInput">: @Model.UserInstrument.Level</span>
                <input type="range" min="1" max="10" step="1" value="@Model.UserInstrument.Level" asp-for="@Model.UserInstrument.Level" class="form-control no-padding" onchange="updateVal(this.value)" />
                <span class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <select multiple="multiple" asp-for="GenreId" class="form-control" asp-items="Model.Genres"></select>
            </div>
            <input type="hidden" asp-for="UserInstrument.Id">
            <input type="hidden" asp-for="UserInstrument.InstrumentId">
            <div class="form-group">
                <input type="submit" value="Rediger instrument" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}